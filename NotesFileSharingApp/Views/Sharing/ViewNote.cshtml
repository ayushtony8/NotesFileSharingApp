@model NotesFileSharingApp.DTOs.NoteDto
@{
    ViewData["Title"] = "Shared Note";
}

<div class="row justify-content-center">
    <div class="col-lg-9">
        <div class="card hover-lift">
            <div class="card-header">
                <div class="d-flex justify-content-between align-items-center">
                    <div>
                        <i class="bi bi-share me-2"></i>
                        <strong>Shared Note</strong>
                        @if (Model.CanEdit)
                        {
                            <span class="badge bg-success ms-2">
                                <i class="bi bi-pencil me-1"></i>Can Edit
                            </span>
                        }
                        else
                        {
                            <span class="badge bg-warning ms-2">
                                <i class="bi bi-eye me-1"></i>Read Only
                            </span>
                        }
                    </div>
                    <small class="text-white-50">
                        <i class="bi bi-person me-1"></i>Shared by: <strong>@Model.UserName</strong>
                    </small>
                </div>
            </div>
            
            <div class="card-body p-4">
                <div class="d-flex justify-content-between align-items-start mb-4">
                    <div class="flex-grow-1">
                        <h1 class="card-title mb-3 text-gradient">@Model.Title</h1>
                        <div class="text-muted">
                            <div class="d-flex flex-wrap gap-3">
                                <small class="d-flex align-items-center">
                                    <i class="bi bi-calendar me-1"></i>
                                    Created: @Model.CreatedAt.ToString("MMM dd, yyyy 'at' h:mm tt")
                                </small>
                                @if (Model.UpdatedAt != Model.CreatedAt)
                                {
                                    <small class="d-flex align-items-center">
                                        <i class="bi bi-pencil me-1"></i>
                                        Updated: @Model.UpdatedAt.ToString("MMM dd, yyyy 'at' h:mm tt")
                                    </small>
                                }
                                <small class="d-flex align-items-center">
                                    <i class="bi bi-person me-1"></i>
                                    @Model.UserName
                                </small>
                            </div>
                        </div>
                    </div>
                    
                    @if (Model.CanEdit)
                    {
                        <div class="btn-group" role="group">
                            <a asp-controller="Notes" asp-action="Edit" asp-route-id="@Model.Id" class="btn btn-primary">
                                <i class="bi bi-pencil me-1"></i> Edit
                            </a>
                        </div>
                    }
                </div>

                <hr class="my-4" style="border-color: var(--border-color);">

                <div class="note-content">
                    <div class="p-4 rounded-modern" style="
                        white-space: pre-wrap; 
                        line-height: 1.8; 
                        font-size: 1.1rem;
                        background-color: var(--gray-50);
                        border-left: 4px solid var(--info-color);
                        min-height: 200px;
                    ">@Model.Content</div>
                </div>

                <div class="mt-4">
                    <div class="alert alert-info">
                        <div class="d-flex align-items-start">
                            <i class="bi bi-info-circle me-2 mt-1"></i>
                            <div>
                                <strong>Sharing Information:</strong> This note has been shared with you by <strong>@Model.UserName</strong>. 
                                @if (Model.CanEdit)
                                {
                                    <span>You have <strong>editing permissions</strong> and can modify this note.</span>
                                }
                                else
                                {
                                    <span>This is a <strong>read-only</strong> shared note.</span>
                                }
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            
            <div class="card-footer p-4">
                <div class="d-flex justify-content-between align-items-center">
                    <a asp-controller="Sharing" asp-action="Index" class="btn btn-outline-secondary">
                        <i class="bi bi-arrow-left me-1"></i> Back to Shared with Me
                    </a>
                    
                    <div class="btn-group">
                        <button type="button" class="btn btn-outline-info" onclick="copyNoteContent()" title="Copy note content to clipboard">
                            <i class="bi bi-clipboard me-1"></i> Copy Content
                        </button>
                        
                        @if (Model.CanEdit)
                        {
                            <a asp-controller="Notes" asp-action="Edit" asp-route-id="@Model.Id" class="btn btn-primary">
                                <i class="bi bi-pencil me-1"></i> Edit Note
                            </a>
                        }
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        function copyNoteContent() {
            const noteContent = document.querySelector('.note-content div').innerText;
            navigator.clipboard.writeText(noteContent).then(() => {
                // Use the global notification system
                showCleanNotification('Note content copied to clipboard!', 'success');
                
                // Update button temporarily
                const button = event.target.closest('button');
                const originalContent = button.innerHTML;
                button.innerHTML = '<i class="bi bi-check me-1"></i> Copied!';
                button.classList.remove('btn-outline-info');
                button.classList.add('btn-success');
                
                setTimeout(() => {
                    button.innerHTML = originalContent;
                    button.classList.remove('btn-success');
                    button.classList.add('btn-outline-info');
                }, 2000);
            }).catch(err => {
                console.error('Failed to copy: ', err);
                showCleanNotification('Failed to copy note content', 'danger');
            });
        }

        // Animate the note content on load and add reading time
        $(document).ready(function() {
            $('.note-content').addClass('fade-in');
            
            // Add reading time estimate
            const noteText = $('.note-content div').text();
            const wordCount = noteText.split(/\s+/).length;
            const readingTime = Math.ceil(wordCount / 200); // Average reading speed
            
            if (wordCount > 50) { // Only show for longer notes
                const readingTimeHtml = `
                    <small class="text-muted d-flex align-items-center">
                        <i class="bi bi-clock me-1"></i>
                        Estimated reading time: <strong>${readingTime} min${readingTime > 1 ? 's' : ''}</strong>
                        <span class="mx-2">•</span>
                        <strong>${wordCount}</strong> words
                    </small>
                `;
                $('.text-muted .d-flex').last().after(readingTimeHtml);
            }
        });
    </script>
}